{"version":3,"sources":["MapChart.js","index.js"],"names":["memo","_ref","setTooltipContent","react_default","a","createElement","data-tip","index_umd","geography","_ref2","geographies","map","geo","key","rsmKey","onMouseEnter","concat","properties","name","onMouseLeave","style","default","fill","outline","hover","pressed","App","_useState","useState","_useState2","Object","slicedToArray","content","setContent","src_MapChart","index_es","rootElement","document","getElementById","ReactDOM","render"],"mappings":"8NAiDeA,iBAzCE,SAAHC,GAA8B,IAAxBC,EAAiBD,EAAjBC,kBAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,WAAS,IACZH,EAAAC,EAAAC,cAACE,EAAA,cAAa,KACZJ,EAAAC,EAAAC,cAACE,EAAA,cAAa,KACZJ,EAAAC,EAAAC,cAACE,EAAA,YAAW,CAACC,UAAU,kBACpB,SAAAC,GAAc,OAAAA,EAAXC,YACUC,IAAI,SAACC,GAAG,OAClBT,EAAAC,EAAAC,cAACE,EAAA,UAAS,CACRM,IAAKD,EAAIE,OACTN,UAAWI,EACXG,aAAc,WACZb,EAAiB,GAAAc,OAAIJ,EAAIK,WAAWC,QAEtCC,aAAc,WACZjB,EAAkB,KAEpBkB,MAAO,CACLC,QAAS,CACPC,KAAM,UACNC,QAAS,QAEXC,MAAO,CACLF,KAAM,OACNC,QAAS,QAEXE,QAAS,CACPH,KAAM,OACNC,QAAS,oBC5B/B,SAASG,IACP,IAAAC,EAA8BC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAnCK,EAAOH,EAAA,GAAEI,EAAUJ,EAAA,GAC1B,OACE1B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6B,EAAQ,CAAChC,kBAAmB+B,IAC7B9B,EAAAC,EAAAC,cAAC8B,EAAA,EAAY,KAAEH,IAKrB,IAAMI,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOrC,EAAAC,EAAAC,cAACqB,EAAG,MAAKU","file":"static/js/main.64222aec.chunk.js","sourcesContent":["import React, { memo } from \"react\";\nimport {\n  ZoomableGroup,\n  ComposableMap,\n  Geographies,\n  Geography\n} from \"react-simple-maps\";\n\nconst MapChart = ({ setTooltipContent }) => {\n  return (\n    <div data-tip=\"\">\n      <ComposableMap>\n        <ZoomableGroup>\n          <Geographies geography=\"/features.json\">\n            {({ geographies }) =>\n              geographies.map((geo) => (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  onMouseEnter={() => {\n                    setTooltipContent(`${geo.properties.name}`);\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent(\"\");\n                  }}\n                  style={{\n                    default: {\n                      fill: \"#D6D6DA\",\n                      outline: \"none\"\n                    },\n                    hover: {\n                      fill: \"#F53\",\n                      outline: \"none\"\n                    },\n                    pressed: {\n                      fill: \"#E42\",\n                      outline: \"none\"\n                    }\n                  }}\n                />\n              ))\n            }\n          </Geographies>\n        </ZoomableGroup>\n      </ComposableMap>\n    </div>\n  );\n};\n\nexport default memo(MapChart);\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport \"./styles.css\";\n\nimport MapChart from \"./MapChart\";\n\nfunction App() {\n  const [content, setContent] = useState(\"\");\n  return (\n    <div>\n      <MapChart setTooltipContent={setContent} />\n      <ReactTooltip>{content}</ReactTooltip>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}